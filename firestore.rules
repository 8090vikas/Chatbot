rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Helper function to check if user owns the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection - users can read/write their own data
    match /users/{userId} {
      // Allow users to read their own data
      allow read: if isOwner(userId);
      
      // Allow users to create/update their own data
      allow create: if isAuthenticated() && 
                       request.resource.data.keys().hasAll(['email', 'created_at']) &&
                       (!('password' in request.resource.data) || 
                        request.resource.data.password == null || 
                        request.resource.data.password is string);
      
      // Allow users to update their own data
      allow update: if isOwner(userId) &&
                       request.resource.data.diff(resource.data).affectedKeys()
                         .hasOnly(['chat_history', 'last_login', 'display_name', 'email']);
      
      // Prevent deletion (or allow if needed)
      allow delete: if false;
    }
    
    // If you have other collections, add them here
    // Example: Public data that anyone can read
    // match /public/{document=**} {
    //   allow read: if true;
    //   allow write: if isAuthenticated();
    // }
    
    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}

